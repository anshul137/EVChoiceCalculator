<<<<<<< HEAD
# Learn more https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files

# dependencies
node_modules/

# Expo
.expo/
dist/
web-build/

# Native
*.orig.*
*.jks
*.p8
*.p12
*.key
*.mobileprovision

# Metro
.metro-health-check*

# debug
npm-debug.*
yarn-debug.*
yarn-error.*

# macOS
.DS_Store
*.pem

# local env files
.env*.local

# typescript
*.tsbuildinfo

# ====== Added More=====

# General
node_modules/
.babelrc
*.log
*.tmp
*.lock

# Expo specific
.expo/
.expo-shared/

# Android specific
android/app/build/
android/.gradle/
android/.idea/
android/local.properties
android/.settings/
android/build/
android/app/src/main/assets/shell-app.bundle
android/app/src/main/assets/shell-app.bundle.meta
android/app/src/main/assets/packager-info.json

# iOS specific
ios/build/
ios/Pods/
ios/Podfile.lock
ios/DerivedData/
ios/.DS_Store
ios/*.xcworkspace
ios/*.xcuserstate

# macOS generated files
*.DS_Store

# JetBrains IDEs
.idea/
*.iml

# Visual Studio Code
.vscode/

# Watchman
.watchmanconfig

# Yarn specific files
.yarn/
.yarn-integrity
.yarnrc

# Environment files
.env
.env.local
.env.development
.env.test
.env.production

# TypeScript cache (if you use TypeScript)
*.tsbuildinfo

# Expo credentials and configuration
*.expo-go
*.expo-private

# Logs and temporary files
logs/
=======
# Logs
logs
>>>>>>> origin/main
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
<<<<<<< HEAD

# Bundled JavaScript and source maps
web-build/
web/

# npm & yarn related files
package-lock.json
yarn.lock

# React Native cache
.expo/web/cache/
metro-cache/
.expo/package-lock.json

# Ignore macOS specific system files
.DS_Store
.AppleDouble
.LSOverride

# Thumbs.db
Thumbs.db

# Windows
*.sln
*.suo
*.psess
*.vcxproj*
*.vcxproj.filters

# Expo Router specific (if applicable)
.expo-router/

# Fastlane (if applicable)
fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots
fastlane/test_output
fastlane/metadata/android/*
fastlane/metadata/ios/*

# Derived Data (Xcode)
ios/build
ios/DerivedData

# Package Manager
.pnpm
*.tsbuildinfo

# Gradle
.gradle
=======
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
>>>>>>> origin/main
